<?xml version="1.0" encoding="UTF-8"?>
<!-- spring的配置文件 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd        
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd        
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.1.xsd http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit.xsd">
	<context:property-placeholder location="classpath*:*.properties" />

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close" init-method="init" p:driverClassName="${jdbc.driverClassName}"
		p:url="${jdbc.url}" p:connectionProperties="druid.stat.slowSqlMillis=5000;druid.stat.logSlowSql=true"
		p:username="${jdbc.username}" p:removeAbandoned="true"
		p:removeAbandonedTimeout="3600" p:logAbandoned="true" p:password="${jdbc.password}"
		p:minIdle="1" p:maxActive="10" p:poolPreparedStatements="true"
		p:maxPoolPreparedStatementPerConnectionSize="20" p:initialSize="1"
		p:maxWait="60000" p:testWhileIdle="true" p:validationQuery="select 1"
		p:timeBetweenEvictionRunsMillis="60000" p:filters="stat,slf4j">
		<description>开发环境配置</description>
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-configuration.xml" />
		<property name="dataSource" ref="dataSource" />
		<!-- 配置mybatis自动扫描接口xml -->
		<property name="mapperLocations" value="classpath:com/aisino/manager51/mybatis/xml/*.xml" />
	</bean>
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	<!-- 扫描mybatis映射接口类 -->  
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
	    <property name="basePackage" value="com.aisino.manager51.mybatis.mapper"/>  
	    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>  
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<context:annotation-config />
	<context:spring-configured />
	<context:component-scan base-package="com.aisino" />

<!-- 	<tx:advice id="txAdvice" transaction-manager="transactionManager"> -->
<!-- 		<tx:attributes> -->
<!-- 			<tx:method name="list*" read-only="true" /> -->
<!-- 			<tx:method name="*" propagation="REQUIRED" /> -->
<!-- 		</tx:attributes> -->
<!-- 	</tx:advice> -->
<!-- 	<aop:aspectj-autoproxy /> -->
 <!-- 	通过AOP实现横向切入 --> 
<!-- 	<aop:config> -->
<!-- 		<aop:advisor pointcut="execution(* com.aisino.domain.*.*.impl.*.*(..))" -->
<!-- 			advice-ref="txAdvice" /> -->
<!-- 	</aop:config> -->

	<!-- Spring实用类 获得Context -->
<!-- 	<bean id="springContextUtils" class="com.aisino.web.util.SpringContextUtils" /> -->

	<!-- 配置文件读取器 -->
<!-- 	<bean id="propertiesReader" class="com.aisino.web.util.PropertiesReader" /> -->

</beans>